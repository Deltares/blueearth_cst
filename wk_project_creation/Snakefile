import shutil
import os

# Path to the Snakemake config file (options for basins to build, data catalog, model output directory)
configfile: "config/snake_config.yml"
project_dir = config['project_dir']
model_region = config['model_region']
model_resolution = config['model_resolution']
DATA_SOURCES = config["data_sources"]

station_locs = config["station_location"]
station_timeseries = config["station_timeseries"]

basin_dir = f"{project_dir}/hydrology_model"

# Master rule: end with all model run and analysed with saving a output plot
rule all:
    input: f"{basin_dir}/run_default/output.csv" 

# Rule to build model hydromt build wflow
rule create_model:
    input:
        hydromt_ini = "config/wflow_build_model.ini",
    output:
        basin_nc = f"{basin_dir}/staticmaps.nc",
    shell:
        """hydromt build wflow "{basin_dir}" "{model_region}" -r "{model_resolution}" -i "{input.hydromt_ini}" -d "{DATA_SOURCES}" -vv"""

# Rule to add gauges to the built model
rule add_gauges:
    input:
        basin_nc = f"{basin_dir}/staticmaps.nc"
    output:
        gauges_fid = f"{basin_dir}/staticgeoms/gauges.geojson"
    shell:
        """hydromt update wflow "{basin_dir}" -c setup_gauges -d "{DATA_SOURCES}" --opt gauges_fn="{station_locs}" --opt derive_subcatch=True -vv"""

# Rule to prepare the time horizon
rule setup_runtime:
    input:
        gauges_fid = f"{basin_dir}/staticgeoms/gauges.geojson"
    output:
        forcing_ini = "config/wflow_build_forcing.ini"
    params:
        starttime = config["starttime"],
        endtime = config["endtime"],
    script: "src/setup_time_horizon.py"

# Rule to add forcing to the updated model
rule add_forcing:
    input:
        forcing_ini = "config/wflow_build_forcing.ini"
    output:
        forcing_fid = f"{project_dir}/climate/ERA5/inmaps_historical.nc"
    shell:
        """hydromt update wflow "{basin_dir}" -i "{input.forcing_ini}" -d "{DATA_SOURCES}" -vv"""

# Rule to run the wflow model
rule run_wflow:
    input:
        forcing_fid = f"{project_dir}/climate/ERA5/inmaps_historical.nc"
    output:
        csv_file = f"{basin_dir}/run_default/output.csv"
    params:
        toml_fid = f"{basin_dir}/wflow_sbm.toml"
    shell:
        """ julia -e "using Wflow; Wflow.run()" "{params.toml_fid}" """

# Rule to analyse and plot wflow model run results --> final output
#rule plot_results:
#    input:
#        csv_file = f"{config['models_dir']}" + "{basin_id}" + "/run_default/output.csv",
#        script = "src/4-analyze/plot_results.py"
#    output: 
#        output_png = f"{config['models_dir']}" + "{basin_id}" + "/run_default/test.png"
#    script: "src/4-analyze/plot_results.py"